{"version":3,"sources":["logo.svg","components/Header.js","components/ActionLoopText.js","components/SpecLoopText.js","actionSpecData.js","components/SelectText.js","components/BodyText.js","components/SponText.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","id","to","smooth","onClickCapture","firstShow","setFirstShow","setReroll","reroll","setRenderBody","ActionLoopText","useState","rollTime","setRollTime","finalAction","useRef","useEffect","intervalStartTimeout","setTimeout","clearTimeout","intervalStopTimeout","setFinalAction","current","interval","children","actionOptions","onChange","currentEl","SpecLoopText","finalSpec","setFinalSpec","specOptions","actionSpecData","GO","EAT","READ","shuffle","a","i","length","j","Math","floor","random","action","Object","keys","map","key","value","reduce","acc","e","SelectText","setSpecOptions","getAction","setAction","setSpec","BodyText","spec","SponText","getSpec","renderBody","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.482c402e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Link } from \"react-scroll\";\r\nimport \"../App.css\";\r\n\r\nfunction Header(props) {\r\n  const handleClick = () => {\r\n    if (!props.firstShow) {\r\n      props.setFirstShow(true);\r\n    }\r\n    props.setReroll(!props.reroll);\r\n    props.setRenderBody(false)\r\n  };\r\n\r\n  return (\r\n    <div className=\"fullpage\">\r\n      <div id=\"header\">\r\n        <h1 id=\"headertext\">Feeling Spontaneous</h1>\r\n        <Link id=\"headergo\" to=\"bigspon\" smooth={true} onClickCapture={handleClick}>\r\n          Go\r\n        </Link>\r\n        {/* not sure hwat onClickCapture does but it works */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { useEffect, useState, useRef } from \"react\";\r\nimport TextLoop from \"react-text-loop\";\r\n\r\nfunction ActionLoopText(props) {\r\n  const [rollTime, setRollTime] = useState(0);\r\n  const finalAction = useRef(null);\r\n\r\n  const handleChange = ({ currentEl }) => {\r\n    finalAction.current = currentEl;\r\n    // console.log(\"🌏 \" + finalAction.current);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const intervalStartTimeout = setTimeout(() => {\r\n      // console.log(\"🏁 start action roll\");\r\n      setRollTime(100);\r\n    }, 1000);\r\n    return () => {\r\n      clearTimeout(intervalStartTimeout);\r\n    };\r\n  }, [props.reroll]);\r\n\r\n  useEffect(() => {\r\n    const intervalStopTimeout = setTimeout(() => {\r\n      setRollTime(0);\r\n      // console.log(\"🛑 stop action roll\");\r\n\r\n      props.setFinalAction(finalAction.current);\r\n    }, 3000);\r\n    return () => {\r\n      clearTimeout(intervalStopTimeout);\r\n    };\r\n  }, [props.reroll]);\r\n\r\n  return (\r\n    <div id=\"actiontext\">\r\n      <TextLoop\r\n        interval={rollTime}\r\n        children={props.actionOptions}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActionLoopText;\r\n","import { useEffect, useState, useRef } from \"react\";\r\nimport TextLoop from \"react-text-loop\";\r\n\r\nfunction SpecLoopText(props) {\r\n  const [rollTime, setRollTime] = useState(0);\r\n  const finalSpec = useRef(null);\r\n\r\n  const handleChange = ({ currentEl }) => {\r\n    finalSpec.current = currentEl;\r\n    // console.log(\"🧭 \" + finalSpec.current);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const intervalStartTimeout = setTimeout(() => {\r\n      // console.log(\"start spec roll 🏁\");\r\n      setRollTime(100);\r\n    }, 3500);\r\n    return () => {\r\n      clearTimeout(intervalStartTimeout);\r\n    };\r\n  }, [props.reroll]);\r\n\r\n  useEffect(() => {\r\n    const intervalStopTimeout = setTimeout(() => {\r\n      setRollTime(0);\r\n      // console.log(\"stop spec roll 🛑\");\r\n\r\n      props.setFinalSpec(finalSpec.current);\r\n      props.setRenderBody(true)\r\n    }, 6000);\r\n    return () => {\r\n      clearTimeout(intervalStopTimeout);\r\n    };\r\n  }, [props.reroll]);\r\n\r\n  return (\r\n    <div id=\"spectext\">\r\n      <TextLoop\r\n        interval={rollTime}\r\n        children={props.specOptions}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpecLoopText;\r\n","let actionSpecData = {\r\n  GO: [\"Park\", \"Mall\", \"Beach with friends oh wait you don't have friends\"],\r\n  EAT: [\"Lamb\", \"Noodles\", \"Rice\", \"Kian's thighs\"],\r\n  READ: [\"三国\", \"Boys in the Boat\", \"One\"],\r\n};\r\n\r\n// yeeted shuffle function\r\nfunction shuffle(a) {\r\n  for (let i = a.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [a[i], a[j]] = [a[j], a[i]];\r\n  }\r\n  return a;\r\n}\r\n\r\n// shuffles the actions\r\nactionSpecData = shuffle(Object.keys(actionSpecData))\r\n  .map((key) => ({ key, value: actionSpecData[key] }))\r\n  .reduce((acc, e) => {\r\n    acc[e.key] = e.value;\r\n    return acc;\r\n  }, {});\r\n\r\n// shuffles the specs\r\nfor (var action in actionSpecData) {\r\n  shuffle(actionSpecData[action]);\r\n}\r\n\r\nexport default actionSpecData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ActionLoopText from \"./ActionLoopText\";\r\nimport SpecLoopText from \"./SpecLoopText\";\r\nimport actionSpecData from \"../actionSpecData\"\r\n\r\nfunction SelectText(props) {\r\n  const [specOptions, setSpecOptions] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSpecOptions(actionSpecData[props.getAction]);\r\n  }, [props.getAction]);\r\n\r\n  return (\r\n    // add styling here for center and big\r\n    <div id=\"looptext\">\r\n      {/* Action */}\r\n      <ActionLoopText\r\n        reroll={props.reroll}\r\n        actionOptions={Object.keys(actionSpecData)}\r\n        setFinalAction={props.setAction}\r\n      />\r\n      {' '}\r\n      {/* Specific */}\r\n      <SpecLoopText\r\n        reroll={props.reroll}\r\n        specOptions={specOptions}\r\n        setFinalSpec={props.setSpec}\r\n        setRenderBody={props.setRenderBody}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectText;\r\n","import {useEffect} from 'react'\r\nfunction BodyText(props) {\r\n\r\n  return (\r\n    // add css or transition element here to delay it from popping up\r\n    <>\r\n      <p>\r\n        this is body text, will have info and scrape stuff from google sheet\r\n      </p>\r\n      <p>\r\n        The action is {props.action} and the spec is {props.spec}.\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BodyText;\r\n","import SelectText from \"./SelectText\";\r\nimport BodyText from \"./BodyText\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\n\r\nfunction SponText(props) {\r\n  const [action, setAction] = useState(null);\r\n  const [spec, setSpec] = useState(null);\r\n\r\n  return (\r\n    <div className=\"fullpage\" id=\"bigspon\">\r\n      <SelectText\r\n        reroll={props.reroll}\r\n        setAction={setAction}\r\n        getAction={action}\r\n        setSpec={setSpec}\r\n        getSpec={spec}\r\n        setRenderBody={props.setRenderBody}\r\n      />\r\n      {props.renderBody ? <BodyText action={action} spec={spec} /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SponText;\r\n","import logo from \"./logo.svg\";\nimport Header from \"./components/Header\";\nimport SponText from \"./components/SponText\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [firstShow, setFirstShow] = useState(false);\n  const [reroll, setReroll] = useState(false);\n  const [renderBody, setRenderBody] = useState(false);\n\n  return (\n    <>\n      <Header\n        firstShow={firstShow}\n        setFirstShow={setFirstShow}\n        reroll={reroll}\n        setReroll={setReroll}\n        setRenderBody={setRenderBody}\n      />\n\n      {firstShow && (\n        <SponText\n          reroll={reroll}\n          renderBody={renderBody}\n          setRenderBody={setRenderBody}\n        />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}